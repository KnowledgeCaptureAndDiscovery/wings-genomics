#!/bin/sh

checkExitCode() {
if [ $? -ne 0 ]; then
	echo "Error"
	exit 1;
fi
}

#Check if a file is zipped:
SSV_INPUTS=""
checkZipFile() {
	INPUTS="$1"
	echo $INPUTS
	#Check if the input file is empty
	FILE_ZIP_CHECK=`file $INPUTS | grep "Zip"`
	echo $FILE_ZIP_CHECK
	if [[ -z $FILE_ZIP_CHECK ]]; then
	    SSV_INPUTS=$INPUTS
	else 
		# Extracting the file-collection from zipped input file
		$ZIP_HOME/unzip $INPUTS
		# Take a zipped input file containing a collection of files and get a space-sep list -> very hacky.
		SSV_INPUTS=`$ZIP_HOME/unzip -Z1 $INPUTS | tr "\n" " "`
		checkExitCode
	fi
}


checkTARFile() {
	INPUTS="$1"
	echo $INPUTS
	#Check if the input file is empty
	FILE_TAR_CHECK=`tar -tf $INPUTS 2>&1 | grep "Error"`
	echo $FILE_TAR_CHECK
	if [[ -z $FILE_TAR_CHECK ]]; then
		# Extracting the file-collection from zipped input file
		tar -xvf $INPUTS
		# Take a zipped input file containing a collection of files and get a space-sep list -> very hacky.
		TAR_SSV_INPUTS=`tar -tf $INPUTS | tr "\n" " "`		
		checkExitCode
	else 
		TAR_SSV_INPUTS=$INPUTS
	fi
}

BASEDIR=`dirname $0`

if [ $# -lt 1 ]; then echo "Error No inputs provided" && exit 1; fi

. $BASEDIR/io.sh 3 0 4 "$@"

export PATH=$PATH:$BOWTIE2_HOME/
checkExitCode

checkZipFile $INPUTS1
SSV_INPUTS1="$SSV_INPUTS"

TAR_SSV_INPUTS1=""
for f in $SSV_INPUTS1; do checkTARFile $f; TAR_SSV_INPUTS1="$TAR_SSV_INPUTS1 $TAR_SSV_INPUTS"; done
#checkTARFile $SSV_INPUTS1
#TAR_SSV_INPUTS1="$TAR_SSV_INPUTS"
#CSV_INPUTS1=`paste -s -d, $SSV_INPUTS1`

checkZipFile $INPUTS2
SSV_INPUTS2="$SSV_INPUTS"

# The input bundle needs to have all bowtie indices and rsem reference files with the same prefix as fasta file
# All bowtie indices should be in the same directory as <input>.fa and have the prefix - <input>.*.bt2
# All bowtie indices should start with the same prefix as <input>.fa and have the prefix - <input>.*.bt2
# Note: For Tuxedo package, FASTA file extension needs to be <input>.fa (not <input>.fasta)
# Formatting path/prefix to the location of the input fasta file (for example: <path>/hg19.fa => refix: <path>/hg19)
REF_FASTA_FILE=`${ZIP_HOME}/unzip -Z1 $INPUTS2 | grep ".*fa$" | sed -n 1p`
REF_NAME=`echo ${REF_FASTA_FILE} | cut -f 1 -d '.'`
echo $REF_NAME

RSEM_PARAMS=$(paste -s -d " " $INPUTS3)
echo $RSEM_HOME/rsem-calculate-expression $RSEM_PARAMS $TAR_SSV_INPUTS1 $REF_NAME $OUTPUTS1
$RSEM_HOME/rsem-calculate-expression $RSEM_PARAMS $TAR_SSV_INPUTS1 $REF_NAME $OUTPUTS1 > $OUTPUTS4
#checkExitCode

mv ${OUTPUTS1}.genes.results $OUTPUTS1
mv ${OUTPUTS1}.isoforms.results $OUTPUTS2
zip -r ${OUTPUTS3}.zip ${OUTPUTS1}.stat
mv ${OUTPUTS3}.zip $OUTPUTS3
rm -rf ${OUTPUTS1}.stat

checkExitCode
