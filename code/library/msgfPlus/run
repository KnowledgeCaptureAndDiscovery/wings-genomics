#!/bin/bash

checkExitCode() {
EC=$?

if [ ${EC} -ne 0 ]; then
	echo "Error"
    exit ${EC};
fi
}

#Check if a file is zipped:
SSV_INPUTS=""
checkZipFile() {
	INPUTS="$1"
	echo $INPUTS
	#Check if the input file is empty
	FILE_ZIP_CHECK=`file $INPUTS | grep "Zip"`
	echo $FILE_ZIP_CHECK
	if [[ -z $FILE_ZIP_CHECK ]]; then
	    SSV_INPUTS=$INPUTS
	else
		# Take a zipped input file containing a collection of mzML files and get a space-sep list -> very hacky.
		SSV_INPUTS=`$ZIP_HOME/unzip -Z1 $INPUTS | tr "\n" " "`
		# Extracting the file-collection from zipped input file
		$ZIP_HOME/unzip $INPUTS
		checkExitCode
	fi
}

BASEDIR=`dirname $0`
if [ $# -lt 1 ]; then echo "Error No inputs provided" && exit 1; fi

NINPUTS=3
NPARAMS=0
NOUTPUTS=3

. $BASEDIR/io.sh ${NINPUTS} ${NPARAMS} ${NOUTPUTS} "$@"

# Take a zipped input file containing a collection of mzML files and get a space-sep list -> very hacky.
checkZipFile $INPUTS1
SSV_INPUTS1="$SSV_INPUTS"

# Split the input msgfplus file into two where the line is ###
# The first part should be the "Mods" file - PARAMFILE1
# The second part should be the "Mods" file - PARAMFILE2
PARAM_SPLITFILES=$(awk '/###/{close("PARAMFILE"f);f++}{print $0 > "PARAMFILE"f}' $INPUTS3 | echo "Done.")


# Run MS-GF+ command: Might need to add parameters later as needed.
MSGFPLUS_CONFIG="PARAMFILE2"
MODS_FILE="PARAMFILE1"
CLI_CONFIG_PARAMS=$(sed '1d' $MSGFPLUS_CONFIG | paste -s -d " ")
echo "Starting MS-GF+ Analysis..." > $OUTPUTS3
for ONE_MS2_FILE in $SSV_INPUTS1
	do
		ONE_MS2_FILE_BASENAME=`basename $ONE_MS2_FILE`
		ONE_MS2_FILE_NOEXT=`echo $ONE_MS2_FILE_BASENAME | cut -d\. -f1`
		ONE_OUTPUT_FILE=${ONE_MS2_FILE_NOEXT}.mzid
    	CLI_PARAMS="$CLI_CONFIG_PARAMS -s ${ONE_MS2_FILE} -d ${INPUTS2} -o ${ONE_OUTPUT_FILE} -mod ${MODS_FILE}"
    	
		echo ${JAVA_HOME}/java -jar $MSGFPLUS_JAR $CLI_PARAMS
    	${JAVA_HOME}/java -jar $MSGFPLUS_JAR $CLI_PARAMS >> $OUTPUTS3
	    #${JAVA_HOME}/java -Xmx3500M -cp $MSGFPLUS_JAR edu.ucsd.msjava.ui.MzIDToTsv \
		#						    -i ${ONE_MS2_FILE_NOEXT}.mzid -o ${ONE_MS2_FILE_NOEXT}.tsv
	done
checkExitCode

# ZIP the output files (default is mzid) and rename the zipped output file
$ZIP_HOME/zip -r ${OUTPUTS1}.zip *.mzid
$ZIP_HOME/zip -r ${OUTPUTS2}.zip PARAMFILE1 PARAMFILE2
checkExitCode

mv ${OUTPUTS1}.zip $OUTPUTS1
mv ${OUTPUTS2}.zip $OUTPUTS2
checkExitCode
