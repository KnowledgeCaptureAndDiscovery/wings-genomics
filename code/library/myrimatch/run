#!/bin/bash

checkExitCode() {
EC=$?

if [ ${EC} -ne 0 ]; then
	echo "Error"
    exit ${EC};
fi
}

#Check if a file is zipped:
SSV_INPUTS=""
checkZipFile() {
	INPUTS="$1"
	echo $INPUTS
	#Check if the input file is empty
	FILE_ZIP_CHECK=`file $INPUTS | grep "Zip"`
	echo $FILE_ZIP_CHECK
	if [[ -z $FILE_ZIP_CHECK ]]; then
	    SSV_INPUTS=$INPUTS
	else 
		# Take a zipped input file containing a collection of mzML files and get a space-sep list -> very hacky.
		SSV_INPUTS=`$ZIP_HOME/unzip -Z1 $INPUTS | tr "\n" " "`
		# Extracting the file-collection from zipped input file
		$ZIP_HOME/unzip $INPUTS
		checkExitCode
	fi
}

BASEDIR=`dirname $0`
if [ $# -lt 1 ]; then echo "Error No inputs provided" && exit 1; fi

NINPUTS=3
NPARAMS=1 
NOUTPUTS=3

. $BASEDIR/io.sh ${NINPUTS} ${NPARAMS} ${NOUTPUTS} "$@"

# Take a zipped input file containing a collection of mzML files and get a space-sep list -> very hacky.
checkZipFile $INPUTS1
SSV_INPUTS1="$SSV_INPUTS"

# Run Myrimatch on one/more files- Hardcoding output format for now since it is 
# Easier to convert mzid to pepXML OR tsv as needed
echo ${BSHOOT_HOME}/myrimatch -OutputFormat "mzIdentML" -ProteinDatabase $INPUTS2 -cfg $INPUTS3 -workdir $PWD $SSV_INPUTS1
${BSHOOT_HOME}/myrimatch -OutputFormat "mzIdentML" -ProteinDatabase $INPUTS2 -cfg $INPUTS3 -workdir $PWD $SSV_INPUTS1 > $OUTPUTS3

# ZIP the output files (using mzid as default for now) and rename the zipped output file
$ZIP_HOME/zip -r ${OUTPUTS1}.zip *.mzid
checkExitCode

mv ${OUTPUTS1}.zip $OUTPUTS1
cat $INPUTS3 > $OUTPUTS2
checkExitCode
