#!/bin/bash

# Functions:
checkExitCode() {
EC=$?

if [ ${EC} -ne 0 ]; then
	echo "Error"
    exit ${EC};
fi
}

#Check if a file is zipped:
SSV_INPUTS=""
checkZipFile() {
	INPUTS="$1"
	echo $INPUTS
	#Check if the input file is empty
	FILE_ZIP_CHECK=`file $INPUTS | grep "Zip"`
	echo $FILE_ZIP_CHECK
	if [[ -z $FILE_ZIP_CHECK ]]; then
	    INPUTS_BASENAME=`basename $INPUTS`
	    SSV_INPUTS=$INPUTS_BASENAME
	    echo cp $INPUTS ${PWD}/${INPUTS_BASENAME}
	    cp $INPUTS ${PWD}/${INPUTS_BASENAME}
	else 
		# Take a zipped input file containing a collection of mzML files and get a space-sep list -> very hacky.
		SSV_INPUTS=`$ZIP_HOME/unzip -Z1 $INPUTS | tr "\n" " "`
		# Extracting the file-collection from zipped input file
		$ZIP_HOME/unzip $INPUTS
		checkExitCode
	fi
}

BASEDIR=`dirname $0`
if [ $# -lt 1 ]; then echo "Error No inputs provided" && exit 1; fi

NINPUTS=4
NPARAMS=0
NOUTPUTS=2

. $BASEDIR/io.sh ${NINPUTS} ${NPARAMS} ${NOUTPUTS} "$@"

# Sometimes the input can be a zip file (with only one file in the zip archive)
checkZipFile $INPUTS1
SSV_INPUTS1="$SSV_INPUTS"

IDPQuery_PARAMS=$(paste -s -d " " $INPUTS4)
echo $BSHOOT_HOME/idpQuery $IDPQuery_PARAMS $SSV_INPUTS1
$BSHOOT_HOME/idpQuery $IDPQuery_PARAMS $SSV_INPUTS1 > $OUTPUTS2
checkExitCode

INPUTS1_NOEXT=$(echo $SSV_INPUTS1 | cut -d\. -f1)
mv $INPUTS1_NOEXT.tsv $OUTPUTS1
checkExitCode
